import streamlit as st
import pandas as pd
import io
import warnings

# Pour √©viter les messages d'avertissement
warnings.filterwarnings('ignore')

# Charger les donn√©es avec cache pour am√©liorer les performances
@st.cache_data
def load_data():
    urls = {
        "etablissement": 'https://raw.githubusercontent.com/ChristopheMontoriol/French_Industry_Janv24/main/data/base_etablissement_par_tranche_effectif.csv',
        "geographic": 'https://raw.githubusercontent.com/ChristopheMontoriol/French_Industry_Janv24/main/data/name_geographic_information.csv',
        "salaire": 'https://raw.githubusercontent.com/ChristopheMontoriol/French_Industry_Janv24/main/data/net_salary_per_town_categories.csv'
    }
    etablissement = pd.read_csv(urls['etablissement'], sep=',')
    geographic = pd.read_csv(urls['geographic'], sep=',')
    salaire = pd.read_csv(urls['salaire'], sep=',')
    return etablissement, geographic, salaire

etablissement, geographic, salaire = load_data()

# Pr√©-traitement des donn√©es salaire
new_column_names_salaire = {
    'SNHM14': 'salaire',
    'SNHMC14': 'salaire_cadre',
    'SNHMP14': 'salaire_cadre_moyen',
    'SNHME14': 'salaire_employe',
    'SNHMO14': 'salaire_travailleur',
    'SNHMF14': 'salaire_femme',
    'SNHMFC14': 'salaire_cadre_femme',
    'SNHMFP14': 'salaire_cadre_moyen_femme',
    'SNHMFE14': 'salaire_employe_femme',
    'SNHMFO14': 'salaire_travailleur_femme',
    'SNHMH14': 'salaire_homme',
    'SNHMHC14': 'salaire_cadre_homme',
    'SNHMHP14': 'salaire_cadre_moyen_homme',
    'SNHMHE14': 'salaire_employe_homme',
    'SNHMHO14': 'salaire_travailleur_homme',
    'SNHM1814': 'salaire_18-25',
    'SNHM2614': 'salaire_26-50',
    'SNHM5014': 'salaire_+50',
    'SNHMF1814': 'salaire_18-25_femme',
    'SNHMF2614': 'salaire_26-50_femme',
    'SNHMF5014': 'salaire_+50_femme',
    'SNHMH1814': 'salaire_18-25_homme',
    'SNHMH2614': 'salaire_26-50_homme',
    'SNHMH5014': 'salaire_+50_homme'
}

salaire = salaire.rename(columns=new_column_names_salaire)
salaire['CODGEO'] = salaire['CODGEO'].str.lstrip('0').str.replace('A', '0').str.replace('B', '0')

# Configuration de la barre lat√©rale
st.sidebar.title("Sommaire")
pages = ["üëã Intro", "üîç Exploration des donn√©es", "üìä Data Visualisation", "üß© Mod√©lisation", "üîÆ Pr√©diction", "üìå Conclusion"]
page = st.sidebar.radio("Aller vers", pages)

# Affichage de la s√©lection des donn√©es uniquement pour la page "Exploration des donn√©es"
if page == pages[1]:
    # Gestion de l'√©tat de la page via session_state
    if 'page' not in st.session_state:
        st.session_state.page = "Etablissement"

    # S√©lection de la page de donn√©es
    data_pages = ["Etablissement", "Geographic", "Salaire"]
    # st.sidebar.markdown("### Choix des donn√©es")
    st.session_state.page = st.sidebar.selectbox("S√©lection du Dataframe", data_pages, index=data_pages.index(st.session_state.page))

st.sidebar.markdown(
    """
    - **Cursus** : Data Analyst
    - **Formation** : Formation Continue
    - **Mois** : Janvier 2024
    - **Groupe** : 
        - Christophe MONTORIOL
        - Issam YOUSR
        - Gwilherm DEVALLAN
        - Yacine OUDMINE
    """
)

# D√©finition des styles
st.markdown("""
    <style>
        h1 {color: #4629dd; font-size: 70px;}
        h2 {color: #440154ff; font-size: 50px;}
        h3 {color: #27dce0; font-size: 30px;}
        body {background-color: #f4f4f4;}
    </style>
""", unsafe_allow_html=True)

# Page d'introduction
if page == pages[0]:
    st.header("üëã Intro")
    st.caption("""**Cursus** : Data Analyst | **Formation** : Formation Continue | **Mois** : Janvier 2024 | **Groupe** : Christophe MONTORIOL, Issam YOUSR, Gwilherm DEVALLAN, Yacine OUDMINE""")
     # Ajouter l'image du bandeau
    st.image('https://raw.githubusercontent.com/ChristopheMontoriol/French_Industry_Janv24/main/data/Bandeau_FrenchIndustry.png', use_column_width=True)
    st.write("""
        L‚Äôobjectif premier de ce projet est d‚Äôobserver et de comprendre quelles sont les in√©galit√©s salariales en France. 
        √Ä travers plusieurs jeux de donn√©es et plusieurs variables (g√©ographiques, socio-professionnelles, d√©mographiques, mais aussi du nombre d‚Äôentreprises par zone), 
        il sera question dans ce projet de mettre en lumi√®re les facteurs d‚Äôin√©galit√©s les plus d√©terminants et de recenser ainsi les variables qui ont un impact significatif sur les deltas de salaire.
        En plus de distinguer les variables les plus d√©terminantes sur les niveaux de revenus, l‚Äôobjectif de cette √©tude sera de construire des clusters ou des groupes de pairs bas√©s sur les niveaux de salaire similaires.
        Enfin, un mod√®le de Machine Learning sera cr√©√© pour pr√©dire au mieux un salaire en fonction des variables disponibles dans les jeux de donn√©es.
    """)

# Page d'exploration des donn√©es
elif page == pages[1]:
    st.header("üîç Exploration des Donn√©es")

    # Fonction pour afficher les informations des DataFrames
    def afficher_info(dataframe, name):
        st.write(f"### {name}")
        st.write("#### Aper√ßu")
        st.write(dataframe.head())
        
        st.write("#### Informations")
        buffer = io.StringIO()
        dataframe.info(buf=buffer)
        st.text(buffer.getvalue())
        
        st.write("#### Statistiques")
        st.write(dataframe.describe())

    # Affichage des informations en fonction de la page s√©lectionn√©e
    if st.session_state.page == "Etablissement":
        afficher_info(etablissement, "Etablissement")
    elif st.session_state.page == "Geographic":
        afficher_info(geographic, "Geographic")
    elif st.session_state.page == "Salaire":
        afficher_info(salaire, "Salaire")

# Page de Data Visualisation
elif page == pages[2]:
    st.header("üìä Data Visualisation")

print('Hello word')

# Page de Mod√©lisation
elif page == pages[3]:
    st.header("üß© Mod√©lisation")

# Page de Pr√©diction
elif page == pages[4]:
    st.header("üîÆ Pr√©diction")
    st.subheader('Simulation de Pr√©diction avec Random Forest Regressor')

# Page de Conclusion
elif page == pages[5]:
    st.header("üìå Conclusion")
    st.write("**Conclusion**")



